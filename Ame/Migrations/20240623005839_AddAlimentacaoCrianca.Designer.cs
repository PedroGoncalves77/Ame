// <auto-generated />
using System;
using Ame.BD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ame.Migrations
{
    [DbContext(typeof(BD_Context))]
    [Migration("20240623005839_AddAlimentacaoCrianca")]
    partial class AddAlimentacaoCrianca
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ame.Modelo.AlimentacaoCrianca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FichaBebeTresMesesId")
                        .HasColumnType("int");

                    b.Property<string>("Pergunta22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta30")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FichaBebeTresMesesId");

                    b.ToTable("AlimentacaoCrianca");
                });

            modelBuilder.Entity("Ame.Modelo.FichaBebeTresMeses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Contrato")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Idade_Crianca")
                        .HasColumnType("float");

                    b.Property<string>("Nome_Crianca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Mae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Pai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Pediatra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profissao_Mae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profissao_Pai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FichaBebeTresMeses");
                });

            modelBuilder.Entity("Ame.Modelo.NivelDeAtividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FichaBebeTresMesesId")
                        .HasColumnType("int");

                    b.Property<string>("Pergunta14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta21")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FichaBebeTresMesesId");

                    b.ToTable("NivelDeAtividade");
                });

            modelBuilder.Entity("Ame.Modelo.SaudeDaCrianca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FichaBebeTresMesesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Pergunta1")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pergunta10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pergunta9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FichaBebeTresMesesId");

                    b.ToTable("SaudeDaCriancas");
                });

            modelBuilder.Entity("Ame.Modelo.AlimentacaoCrianca", b =>
                {
                    b.HasOne("Ame.Modelo.FichaBebeTresMeses", "FichaBebeTresMeses")
                        .WithMany("AlimentacaoCrianca")
                        .HasForeignKey("FichaBebeTresMesesId");

                    b.Navigation("FichaBebeTresMeses");
                });

            modelBuilder.Entity("Ame.Modelo.NivelDeAtividade", b =>
                {
                    b.HasOne("Ame.Modelo.FichaBebeTresMeses", "FichaBebeTresMeses")
                        .WithMany("NivelAtividade")
                        .HasForeignKey("FichaBebeTresMesesId");

                    b.Navigation("FichaBebeTresMeses");
                });

            modelBuilder.Entity("Ame.Modelo.SaudeDaCrianca", b =>
                {
                    b.HasOne("Ame.Modelo.FichaBebeTresMeses", "FichaBebeTresMeses")
                        .WithMany("SaudeCrianca")
                        .HasForeignKey("FichaBebeTresMesesId");

                    b.Navigation("FichaBebeTresMeses");
                });

            modelBuilder.Entity("Ame.Modelo.FichaBebeTresMeses", b =>
                {
                    b.Navigation("AlimentacaoCrianca");

                    b.Navigation("NivelAtividade");

                    b.Navigation("SaudeCrianca");
                });
#pragma warning restore 612, 618
        }
    }
}
